{"version":3,"file":"static/js/CastView.d26dfb70.chunk.js","mappings":"oHAMA,IAJiB,WACf,OAAO,oCACR,C,gHCHD,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA4E,oB,SCmC5E,EA/Ba,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACd,OACE,8BACE,eAAIC,UAAWC,EAAf,SACGF,EAAKG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,UAApC,OACR,gBAAIN,UAAWC,EAAf,WACE,gBACED,UAAWC,EACXM,IAAKH,EAAY,yCAAqCA,G,ioKACtDI,IAAI,YAEN,uBAAIH,KACJ,uCAAeC,OAPgBH,EADzB,OAcjB,E,UCDD,EAhBiB,WACf,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOZ,EAAP,KAAaa,EAAb,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAIC,GAAY,EAGhB,OAFAC,EAAAA,EAAAA,IAAYN,GAASO,MAAK,SAAAC,GAAI,OAAKH,GAAaF,EAAQK,EAA1B,IAEvB,WACLH,GAAY,CACb,CACF,GAAE,CAACL,KAEG,8BAAGV,EAAKmB,OAAS,GAAI,SAAC,EAAD,CAAMnB,KAAMA,KAAW,SAACoB,EAAA,EAAD,KACpD,C","sources":["Components/MoreInfo/NotFound/NotFound.js","webpack://foo/./src/Components/MoreInfo/Cast/cast.module.css?9e6c","Components/MoreInfo/Cast/Cast.js","views/movieDetails/CastView.js"],"sourcesContent":["import React from 'react';\n\nconst NotFound = () => {\n  return <p>Not found</p>;\n};\n\nexport default NotFound;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"cast_list__CJeCn\",\"item\":\"cast_item__S4ylR\",\"image\":\"cast_image__iN3l3\"};","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport styles from './cast.module.css';\nimport notFound from '../../../images/notFound.png';\n\nconst Cast = ({ cast }) => {\n  return (\n    <section>\n      <ul className={styles.list}>\n        {cast.map(({ id, profile_path, original_name, character }) => (\n          <li className={styles.item} key={id}>\n            <img\n              className={styles.image}\n              src={profile_path ? `https://image.tmdb.org/t/p/w500${profile_path}` : notFound}\n              alt=\"avatar\"\n            />\n            <p>{original_name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      profile_path: PropTypes.string,\n      original_name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default Cast;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastInfo } from '../../api/api';\nimport Cast from '../../Components/MoreInfo/Cast/Cast';\nimport NotFound from '../../Components/MoreInfo/NotFound';\n\nconst CastView = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    let cancelled = false;\n    getCastInfo(movieId).then(data => !cancelled && setCast(data));\n\n    return () => {\n      cancelled = true;\n    };\n  }, [movieId]);\n\n  return <>{cast.length > 0 ? <Cast cast={cast} /> : <NotFound />}</>;\n};\n\nexport default CastView;\n"],"names":["cast","className","styles","map","id","profile_path","original_name","character","src","alt","movieId","useParams","useState","setCast","useEffect","cancelled","getCastInfo","then","data","length","NotFound"],"sourceRoot":""}